import pandas as pd
pd.set_option('display.max_colwidth', None)

# Loading data and investigating it
jeopardy = pd.read_csv('jeopardy.csv')
print(jeopardy)

# Rename column names
jeopardy.rename(columns ={'Show Number': 'ShowNumber',
                            ' Air Date': 'AirDate',
                            ' Round':'Round',
                            ' Category':'Category',
                            ' Value': 'Value',
                            ' Question': 'Question',
                            ' Answer':'Answer' }, inplace = True)

print(jeopardy.columns)
print(jeopardy.Question)

#  Filtering dataset that contain a list of words
def filter_question_by_words(data, words):
    # Lowercases all words in the list of words as well as the questions. Returns true is all of the words in the list appear in the question.
    filter_func = lambda x: all(word.lower() in x.lower() for word in words)
    # The .loc selects all rows in the dataframe that return True from the list of true and false from Question above
    return data.loc[data['Question'].apply(filter_func)]

# Testing the filter function
filtered = filter_question_by_words(jeopardy, ['King', 'England'])
print(filtered['Question'])

#  Adding a new column. If the value of the float column is not "None", then we cut off the first character (which is a dollar sign), 
# and replace all commas with nothing, and then cast that value to a float. If the answer was "None", then we just enter a 0.
jeopardy["Float Value"] = jeopardy["Value"].apply(lambda x: float(x[1:].replace(',','')) if x != "no value" else 0)

# Filtering the dataset and finding the average value of those questions
filtered = filter_question_by_words(jeopardy, ["King"])
print(filtered["Float Value"].mean())

# A function to find the unique answers of a set of data
def get_answer_counts(data):
    return data["Answer"].value_counts()

# Testing the answer count function
print(get_answer_counts(filtered))
